// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeterinarskaStanica.DAL;

namespace VeterinarskaStanica.Migrations
{
    [DbContext(typeof(VeterinarskaStanicaContext))]
    [Migration("20210926100149_Migracija")]
    partial class Migracija
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("VeterinarskaStanica.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GradoviId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StrucneSpremeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradoviId");

                    b.HasIndex("KorisnickiNalogId")
                        .IsUnique();

                    b.HasIndex("StrucneSpremeId");

                    b.ToTable("Administratori");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.DefinsanaTerapija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Doziranje")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PreglediId")
                        .HasColumnType("int");

                    b.Property<int>("TerapijaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreglediId");

                    b.HasIndex("TerapijaId");

                    b.ToTable("DefinsanaTerapije");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Dijagnoza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv_dijagnoze")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra_dijagnoze")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dijagnoze");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GradoviId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<string>("Pozicija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZvanjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradoviId");

                    b.HasIndex("KorisnickiNalogId")
                        .IsUnique();

                    b.HasIndex("ZvanjeId");

                    b.ToTable("Doktori");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Gradovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gradovii");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.IzvrseneUsluge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RacuniId")
                        .HasColumnType("int");

                    b.Property<int>("UslugeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RacuniId");

                    b.HasIndex("UslugeId");

                    b.ToTable("IzvrseneUslugee");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.KorisnickiNalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("admin")
                        .HasColumnType("bit");

                    b.Property<bool>("doc")
                        .HasColumnType("bit");

                    b.Property<bool>("teh_osob")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("KorisnickiNalozi");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.KupljeniLijekovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("LijekoviId")
                        .HasColumnType("int");

                    b.Property<int>("RacuniId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LijekoviId");

                    b.HasIndex("RacuniId");

                    b.ToTable("KupljeniLijekovii");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Lijekovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Rok_trajanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vrsta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lijekovii");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Odjeli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Odjelii");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Pacijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatumPrijema")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Godiste")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("VlasnikId")
                        .HasColumnType("int");

                    b.Property<int>("VrstaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VlasnikId");

                    b.HasIndex("VrstaId");

                    b.ToTable("Pacijenti");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Pregledi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatumPregleda")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int");

                    b.Property<int>("RacuniId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoktorId");

                    b.HasIndex("PacijentId");

                    b.HasIndex("RacuniId");

                    b.ToTable("Pregledii");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Racuni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IznosZaPlatiti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Racunii");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.StrucneSpreme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StrucneSpremee");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Tehnicko_osoblje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GradoviId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<int?>("OdjeliId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vrsta_posla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradoviId");

                    b.HasIndex("KorisnickiNalogId")
                        .IsUnique();

                    b.HasIndex("OdjeliId");

                    b.ToTable("Tehnicka_osoblja");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Terapija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatumTerapije")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Vrsta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Terapije");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Uloge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NazivUloge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uloges");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Uplata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Iznos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RacuniId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RacuniId");

                    b.ToTable("Uplate");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Usluge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatumUsluge")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uslugee");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.UspostavljenaDijagnoza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DijagnozaId")
                        .HasColumnType("int");

                    b.Property<int>("Intezitet")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreglediId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DijagnozaId");

                    b.HasIndex("PreglediId");

                    b.ToTable("UspostavljenaDijagnoze");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Vlasnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vlasnici");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Vrsta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vrste");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Zvanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zvanja");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Administrator", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Gradovi", "Gradovi")
                        .WithMany()
                        .HasForeignKey("GradoviId");

                    b.HasOne("VeterinarskaStanica.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithOne("Administrator")
                        .HasForeignKey("VeterinarskaStanica.Models.Administrator", "KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.StrucneSpreme", "StrucneSpreme")
                        .WithMany()
                        .HasForeignKey("StrucneSpremeId");

                    b.Navigation("Gradovi");

                    b.Navigation("KorisnickiNalog");

                    b.Navigation("StrucneSpreme");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.DefinsanaTerapija", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Pregledi", "Pregledi")
                        .WithMany()
                        .HasForeignKey("PreglediId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Terapija", "Terapija")
                        .WithMany()
                        .HasForeignKey("TerapijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregledi");

                    b.Navigation("Terapija");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Doktor", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Gradovi", "Gradovi")
                        .WithMany()
                        .HasForeignKey("GradoviId");

                    b.HasOne("VeterinarskaStanica.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithOne("Doktor")
                        .HasForeignKey("VeterinarskaStanica.Models.Doktor", "KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Zvanje", "Zvanje")
                        .WithMany()
                        .HasForeignKey("ZvanjeId");

                    b.Navigation("Gradovi");

                    b.Navigation("KorisnickiNalog");

                    b.Navigation("Zvanje");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.IzvrseneUsluge", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Racuni", "Racuni")
                        .WithMany()
                        .HasForeignKey("RacuniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Usluge", "Usluge")
                        .WithMany()
                        .HasForeignKey("UslugeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Racuni");

                    b.Navigation("Usluge");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.KupljeniLijekovi", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Lijekovi", "Lijekovi")
                        .WithMany()
                        .HasForeignKey("LijekoviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Racuni", "Racuni")
                        .WithMany()
                        .HasForeignKey("RacuniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lijekovi");

                    b.Navigation("Racuni");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Pacijent", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Vlasnik", "Vlasnik")
                        .WithMany()
                        .HasForeignKey("VlasnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Vrsta", "Vrsta")
                        .WithMany()
                        .HasForeignKey("VrstaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vlasnik");

                    b.Navigation("Vrsta");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Pregledi", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Doktor", "Doktori")
                        .WithMany()
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Pacijent", "Pacijent")
                        .WithMany()
                        .HasForeignKey("PacijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Racuni", "Racuni")
                        .WithMany()
                        .HasForeignKey("RacuniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktori");

                    b.Navigation("Pacijent");

                    b.Navigation("Racuni");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Tehnicko_osoblje", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Gradovi", "Gradovi")
                        .WithMany()
                        .HasForeignKey("GradoviId");

                    b.HasOne("VeterinarskaStanica.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithOne("Tehnicko_osoblje")
                        .HasForeignKey("VeterinarskaStanica.Models.Tehnicko_osoblje", "KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Odjeli", "Odjeli")
                        .WithMany()
                        .HasForeignKey("OdjeliId");

                    b.Navigation("Gradovi");

                    b.Navigation("KorisnickiNalog");

                    b.Navigation("Odjeli");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.Uplata", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Racuni", "Racuni")
                        .WithMany()
                        .HasForeignKey("RacuniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Racuni");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.UspostavljenaDijagnoza", b =>
                {
                    b.HasOne("VeterinarskaStanica.Models.Dijagnoza", "Dijagnoze")
                        .WithMany()
                        .HasForeignKey("DijagnozaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarskaStanica.Models.Pregledi", "Pregledi")
                        .WithMany()
                        .HasForeignKey("PreglediId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dijagnoze");

                    b.Navigation("Pregledi");
                });

            modelBuilder.Entity("VeterinarskaStanica.Models.KorisnickiNalog", b =>
                {
                    b.Navigation("Administrator");

                    b.Navigation("Doktor");

                    b.Navigation("Tehnicko_osoblje");
                });
#pragma warning restore 612, 618
        }
    }
}
